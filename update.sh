#!/bin/bash
# I am really sorry for anyone who has to work with this, including myself and
# Kat. - mattl
#
# For troubleshooting:
# sudo tail -f /var/log/letsencrypt/letsencrypt.log

set -o errexit
set -o errtrace
set -o nounset

trap '_es=${?};
    _lo=${LINENO};
    _co=${BASH_COMMAND};
    echo "${0}: line ${_lo}: \"${_co}\" exited with a status of ${_es}";
    exit ${_es}' ERR


repo='https://github.com/creativecommons/creativecommons.org.git'
reponame='cc-all-forks'
workdir='/root'
checkoutdir="${workdir}/${reponame}"
resourcedir="${workdir}/magical-pony"
statusfile='/var/www/html/index.html'
certbotargs='-w /var/www/html -d legal.creativecommons.org'

rm -rf "${checkoutdir}"

mkdir -p "${checkoutdir}"

echo '<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <title>Updating the Magical Pony</title>
  </head>
  <body style="background-color:lavender; font-family:monospace;">
    <h1>Updating the Magical Pony</h1>
    <p>
      <a href="https://github.com/creativecommons/magical-pony">
        https://github.com/creativecommons/magical-pony
      </a>
    </p>' > "${statusfile}"
echo "    <h2>$(date -u '+%A %F %T %:::z %Z')</h2>" >> "${statusfile}"
echo "      <p>($(date '+%A %F %T %:::z %Z'))</p>" >> "${statusfile}"
sed -e's/^/    /' ${resourcedir}/pony.img.html >> "${statusfile}"

pushd "${checkoutdir}"
echo

echo "# git clone ${repo}"
# Get a clean version to avoid any merge/reset weirdness
git clone "${repo}" .
echo

echo '    <h2>Branches</h2>' >> "${statusfile}"

for branchname in $(git branch -r | grep -v 'HEAD\|master')
do
    echo "# ${branchname}"
    branchid="${branchname##*/}"
    if [[ -n "${branchid//[-.[:alnum:]]/}" ]]
    then
        {
            echo '    <hr>'
            echo "    <h3 style=\"color:red;\">${branchid}</h3>"
            echo "    <p style=\"color:red;\"> (${branchname})</p>"
            echo -n "    <p style=\"color:red;\">The branchid (${branchid}) is"
            echo ' not a valid DNS domain name</p>'
            echo -n '    <p style=\"color:red;\"><strong>SKIPPING DEPLOYMENT'
            echo '</strong></p>'
            echo
        } >> "${statusfile}"
        continue
    fi
    branchpath="/srv/clones/${branchid}"
    webroot="${branchpath}/docroot"
    domain="${branchid}.legal.creativecommons.org"
    certbotargs="${certbotargs:-} -w ${webroot} -d ${domain}"
    echo "${branchpath}"
    git checkout -f -q "${branchname}"
    git show-branch --sha1-name HEAD
    #
    mkdir -p "${branchpath}.NEW"
    git archive "${branchname}" \
        | tar -xC "${branchpath}.NEW"
    [[ -d ${branchpath} ]] && mv ${branchpath} ${branchpath}.OLD
    mv ${branchpath}.NEW ${branchpath}
    [[ -d ${branchpath}.OLD ]] && rm -rf ${branchpath}.OLD
    # Ensure branchpath mtime is up-to-date
    touch ${branchpath}/.gitignore
    # Delete TLS/SSL config so that it is regenerated by certbot
    #rm -f "/etc/apache2/sites-enabled/${branchid}-le-ssl.conf"
    cp "${resourcedir}/default" \
       "/etc/apache2/sites-enabled/${branchid}.conf"
    perl -p -i -e "s/MAGICALPONY/${branchid}/g" \
         "/etc/apache2/sites-enabled/${branchid}.conf"
    hash=$(git log ${branchname} -1 --format='%H')
    {
        echo '    <hr>'
        echo "    <h3>${branchid}</h3>"
        echo "    <p>(${branchname})</p>"
        echo '    <h4>Test Domain</h4>'
        echo '    <p>'
        echo "      <a href=\"https://${domain}/\">"
        echo "        ${domain}"
        echo '      </a>'
        echo '    </p>'
        echo '    <h4>Commit</h4>'
        echo '    <p>'
        echo "      <a href=\"https://github.com/creativecommons/creativecommons.org/commit/${hash}\">"
        echo "        ${hash}"
        echo "      </a>"
        echo '    </p>'
    } >> "${statusfile}"
    git log ${branchname} -1 --format='    <p>%s</p>' >> "${statusfile}"
    echo >> "${statusfile}"
    echo
done
echo '    <hr>' >> "${statusfile}"

popd

echo
echo '# apache2 restart'
service apache2 restart
sleep 1

echo
echo '# cerbotargs:'
echo "${certbotargs}"
echo
echo '# run cerbot'
echo
# Get any new certificates, incorporate old one, refresh expiring, install any
# new http->https redirects, and do so automatically.
if /usr/bin/certbot \
    --agree-tos -m webmaster@creativecommons.org \
    --non-interactive \
    --cert-name legal.creativecommons.org \
    --keep-until-expiring \
    --expand \
    --renew-with-new-domains \
    --authenticator webroot \
    --installer apache \
    ${certbotargs}
then
    echo '    <h2>And we are done!</h2>' >> "${statusfile}"
else
    {
        echo '    <h2>certbot ERROR</h2>'
        echo '    <p>See:'
        echo '        <pre>/var/log/letsencrypt/letsencrypt.log</pre>'
        echo '    </p>'
    } >> "${statusfile}"
fi
echo

echo "    <h2>$(date -u '+%A %F %T %:::z %Z')</h2>" >> "${statusfile}"
echo "      <p>($(date '+%A %F %T %:::z %Z'))</p>" >> "${statusfile}"
echo '  </body>' >> "${statusfile}"
echo '</html>' >> "${statusfile}"

# Touch primary apache files to ensure they are preserved
touch /etc/apache2/sites-enabled/legal.creativecommons.org.conf
touch /etc/apache2/sites-enabled/legal.creativecommons.org-le-ssl.conf

echo 'Directories older than 24 hours are deleted by magical-pony update.sh' \
    > /srv/clones/README
echo '# Clean-up: /srv/clones'
find /srv/clones/* -maxdepth 0 -type d -mtime +1
find /srv/clones/* -maxdepth 0 -type d -mtime +1 -exec rm -rf {} +
echo

echo 'Files older than 24 hours are deleted by magical-pony update.sh' \
    > /etc/apache2/sites-enabled/README
echo '# Clean-up: /etc/apache2/sites-enabled/'
find /etc/apache2/sites-enabled -mtime +1
find /etc/apache2/sites-enabled -mtime +1 -delete
echo
echo '# apache2 restart'
service apache2 restart
